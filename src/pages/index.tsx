import { GetServerSideProps, InferGetServerSidePropsType, type NextPage } from "next";
import Head from "next/head";

import { useState } from "react";
import WordData from "../data/words.json";

// eslint-disable-next-line @typescript-eslint/require-await
// export const getServerSideProps: GetServerSideProps<> = async () => {
//   const { words } = WordData;
//   const { hint, word } = words[Math.floor(Math.random() * words.length)]!;
//   return {
//     props: {
//       hint,
//       word: word.toLocaleLowerCase("tr").split('').map((letter) => {
//         return {
//           letter,
//           isGuessed: false,
//         }
//       })
//     }
//   }
// }

// type PageProps=InferGetServerSidePropsType<typeof getServerSideProps>

const Home: NextPage = () => {

  // hydration error getserverside props initial word values
  const getRandomWord = () => {
    const { words } = WordData;
    const { hint, word } = words[Math.floor(Math.random() * words.length)]!;
    return {
      hint,
      word: word.toLocaleLowerCase("tr").split('').map((letter) => {
        return {
          letter,
          isGuessed: false,
        }
      })
    }
  }
  const [word, setWord] = useState(getRandomWord());
  const [guess, setGuess] = useState("");
  const [finished, setFinished] = useState(false);

  const handleButtonClick = () => {
    const newWord = word.word.map((letter) => {
      const isGuessed = guess.includes(letter.letter) || letter.isGuessed;
      return {
        ...letter,
        isGuessed
      }
    });
    setWord({ ...word, word: newWord });
    setGuess("");
    const isFinished = newWord.every((letter) => letter.isGuessed === true);
    setFinished(isFinished);
  }
  const handleReset = () => {
    setWord(getRandomWord());
    setGuess("");
    setFinished(false);
  }
  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setGuess(event.currentTarget.value);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center text-gray-200 justify-center bg-gray-700">
        <div className="flex flex-col items-center justify-center max-w-4xl">
          <div className="flex flex-row gap-2">
            {
              word.word.map((letter, index) => {
                return (
                  <div key={index} className="flex justify-center rounded-lg text-gray-900 text-4xl items-center w-24 h-24 bg-gray-200">
                    {letter.letter}
                  </div>
                )
              })
            }
          </div>
          <div className="flex justify-center gap-4 my-6 w-full">
            <input value={guess} onChange={handleInputChange} placeholder="Tahmininizi giriniz..." className="px-4 py-2 rounded-lg text-gray-900 text-xl" type="text" />
            <button onClick={handleButtonClick} className="px-4 py-4 bg-gray-100 text-gray-900 rounded-lg font-bold text-xl">Tahmin Et!</button>
          </div>
          {finished && (

            <div className="flex items-center gap-4 p-4 mb-4 text-md text-green-900 rounded-lg bg-green-200 dark:bg-gray-800 dark:text-green-400" role="alert">
              <span className="font-medium"> Tebrikler! Kelimeyi doğru tahmin ettiniz.</span>
              <button onClick={handleReset} className="flex justify-center items-center text-gray-200 w-12 h-12 p-2 rounded-md bg-gray-800">
                <svg
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  height="48px"
                  width="48px"
                >
                  <path d="M12 4c2.1 0 4.1.8 5.6 2.3 3.1 3.1 3.1 8.2 0 11.3-1.8 1.9-4.3 2.6-6.7 2.3l.5-2c1.7.2 3.5-.4 4.8-1.7 2.3-2.3 2.3-6.1 0-8.5C15.1 6.6 13.5 6 12 6v4.6l-5-5 5-5V4M6.3 17.6C3.7 15 3.3 11 5.1 7.9l1.5 1.5c-1.1 2.2-.7 5 1.2 6.8.5.5 1.1.9 1.8 1.2l-.6 2c-1-.4-1.9-1-2.7-1.8z" />
                </svg>
              </button>
            </div>


          )}
          <div className="flex flex-col items-center justify-center gap-4 mt-6">
            <h1 className="text-3xl">İpucu</h1>
            <article className="text-2xl max-w-lg">
              {word.hint}
            </article>
          </div>
        </div>

      </main >
    </>
  );
};

export default Home;
